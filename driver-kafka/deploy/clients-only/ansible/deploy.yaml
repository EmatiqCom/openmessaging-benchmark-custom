#
# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations
# under the License.
#
- name: Setup common OS packages
  hosts: client
  tags: server
  connection: ssh
  become: true
  roles:
  tasks:
    - name: Remove sysstat
      package:
        name:
          - sysstat
        state: absent
    - name: Install packages
      package:
        name:
          - xfsprogs
          - iotop
          - wget
          - sysstat
          - vim
          - chrony
          - git
          - gcc
          - tuned
        state: present
        update_cache: true
    - name: Install Java Redhat
      when: ansible_os_family == 'RedHat'
      package:
        name:
          - java-17
        state: present
    - name: Install Java on Debian
      when: ansible_os_family == 'Debian'
      package:
        name:
          - openjdk-17-jdk
        state: present

- name: Setup Benchmark client
  hosts: client
  connection: ssh
  become: true
  tasks:
    - file: path=/opt/benchmark state=absent
    - name: Copy benchmark code
      unarchive:
        src: ../../../../package/target/openmessaging-benchmark-0.0.1-SNAPSHOT-bin.tar.gz
        dest: /opt
    - shell: mv /opt/openmessaging-benchmark-0.0.1-SNAPSHOT /opt/benchmark
    - shell: tuned-adm profile latency-performance
    - shell: chown -R ubuntu /opt/benchmark

    - name: Get list of driver config files
      raw: ls -1 /opt/benchmark/driver-kafka/*.yaml
      register: drivers_list

    - name: Configure URL
      lineinfile:
        dest: "{{ item }}"
        regexp: "^  bootstrap.servers="
        line: "  bootstrap.servers={{ bootstrapServers }}"
      with_items: "{{ drivers_list.stdout_lines }}"

    - name: Configure SASL Mechanism
      lineinfile:
        dest: "{{ item }}"
        regexp: "^  sasl.mechanism="
        insertafter: "^  bootstrap.servers="
        line: "  sasl.mechanism=PLAIN"
      with_items: "{{ drivers_list.stdout_lines }}"

    - name: Configure Benchmark Name
      lineinfile:
        dest: "{{ item }}"
        regexp: "^name: Kafka"
        line: "name: Kafka+SASL+TLS"
      with_items: "{{ drivers_list.stdout_lines }}"

    - name: Configure Security Protocol
      lineinfile:
        dest: "{{ item }}"
        regexp: "^  security.protocol="
        insertafter: "^  bootstrap.servers="
        line: "  security.protocol=SASL_SSL"
      with_items: "{{ drivers_list.stdout_lines }}"

    - name: Configure JAAS
      lineinfile:
        dest: "{{ item }}"
        regexp: "^  sasl.jaas.config="
        insertafter: "^  bootstrap.servers="
        line: "  sasl.jaas.config=org.apache.kafka.common.security.plain.PlainLoginModule required username='{{api_key}}' password='{{api_secret}}';"
      with_items: "{{ drivers_list.stdout_lines }}"

    - name: Configure memory
      lineinfile:
        dest: /opt/benchmark/bin/benchmark-worker
        regexp: "^JVM_MEM="
        line: "JVM_MEM=\"-Xms{{ clientMinJvmHeap }} -Xmx{{ clientMinJvmHeap }} -XX:+UseG1GC -XX:MaxGCPauseMillis=10 -XX:+ParallelRefProcEnabled -XX:+UnlockExperimentalVMOptions -XX:+DoEscapeAnalysis -XX:ParallelGCThreads=32 -XX:ConcGCThreads=32 -XX:G1NewSizePercent=50 -XX:+DisableExplicitGC -XX:-ResizePLAB -XX:+PerfDisableSharedMem -XX:+AlwaysPreTouch -XX:-UseBiasedLocking\""

    - name: Configure memory
      lineinfile:
        dest: /opt/benchmark/bin/benchmark
        regexp: "^JVM_MEM="
        line: 'JVM_MEM="-Xmx1G"'

    - name: Setup JMX for Producer/Consumer clients
      copy:
        src: "monitoring/jmx_exporter/jmx_prometheus_javaagent-0.13.0.jar"
        dest: "/opt/benchmark/jmx_prometheus_javaagent-0.13.0.jar"

    - name: Configure JMX for Prometheus (Client)
      template:
        src: "monitoring/jmx_exporter/client.yml"
        dest: "/opt/benchmark/metrics.yml"

    - name: Configure benchmark worker
      template:
        src: "templates/workers.yaml"
        dest: "/opt/benchmark/workers.yaml"

    - name: Install benchmark systemd service
      template:
        src: "templates/benchmark-worker.service"
        dest: "/etc/systemd/system/benchmark-worker.service"

    - name: Restart benchmark worker
      service:
        state: restarted
        name: "benchmark-worker"

- name: Hosts addresses
  hosts: localhost
  become: false
  tasks:
    - debug:
        msg: "Benchmark clients {{ item }}"
      with_items: "{{ groups['client'] }}"

# Setup the Prometheus/Grafana monitoring stack
- hosts: prometheus
  tags: monitoring
  roles:
    - cloudalchemy.prometheus
  vars:
    prometheus_db_dir: /monitoring/prometheus/data
    prometheus_scrape_configs:
      - job_name: "node"
        static_configs:
          - targets: "{{ groups['client'] | map('extract', hostvars, ['ansible_default_ipv4','address']) | map('regex_replace', '^(.*)$','\\1:9100') | list  }}"
      - job_name: "client"
        static_configs:
          - targets: "{{ groups['client'] | map('extract', hostvars, ['ansible_default_ipv4', 'address']) | map('regex_replace', '^(.*)$', '\\1:9090') | list }}"

- hosts: prometheus
  tags: monitoring
  roles:
    - cloudalchemy.grafana
  vars:
    grafana_logs_dir: /monitoring/grafana/logs
    grafana_data_dir: /monitoring/grafana/data
    grafana_version: 6.7.3
    grafana_security:
      admin_user: admin
      admin_password: set_me_if_you_want
    grafana_datasources:
      - name: prometheus
        type: prometheus
        access: proxy
        url: 'http://localhost:9090'
        basicAuth: false
    grafana_dashboards:
      - dashboard_id: 1860
        revision_id: 21
        datasource: prometheus

- name: Install Node exporter on Clients to collect system metrics
  hosts: client
  tags: monitoring
  become: true
  tasks:
    - name: Add user node_exporter
      user:
        name: node_exporter
        shell: /bin/false
        system: true
        create_home: no

    - name: Download and extract
      unarchive:
        src: https://github.com/prometheus/node_exporter/releases/download/v1.0.1/node_exporter-1.0.1.linux-amd64.tar.gz
        dest: /tmp
        remote_src: yes

    - name: Copy bin node_exporter to /usr/local/bin
      copy:
        src: /tmp/node_exporter-1.0.1.linux-amd64/node_exporter
        remote_src: yes
        dest: /usr/local/bin/
        owner: node_exporter
        group: node_exporter
        mode: u+x,g+x,o+x

    - name: Create service node_exporter.service
      blockinfile:
        path: /etc/systemd/system/node_exporter.service
        block: |
          [Unit]
          Description=Prometheus Node Exporter
          Wants=network-online.target
          After=network-online.target
          [Service]
          User=node_exporter
          Group=node_exporter
          Type=simple
          ExecStart=/usr/local/bin/node_exporter
          [Install]
          WantedBy=multi-user.target
        create: true

    - name: systemctl daemon_reload
      systemd:
        daemon_reload: yes

    - name: Start and Enable node_exporter
      service:
        name: node_exporter
        state: started
        enabled: yes

    - name: Check whether port 9100 is available
      wait_for:
        port: 9100
        state: started
        timeout: 5

- name: Install jattach and async-profiler
  hosts: client
  tags: profiling
  become: true
  tasks:
    - name: Download and extract async-profiler
      unarchive:
        src: https://github.com/jvm-profiling-tools/async-profiler/releases/download/v1.7.1/async-profiler-1.7.1-linux-x64.tar.gz
        dest: /tmp
        remote_src: yes

    - name: Download and install jattach
      get_url:
        url: https://github.com/apangin/jattach/releases/download/v1.5/jattach
        dest: /usr/bin/jattach
        mode: "0755"